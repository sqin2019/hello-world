# Copyright 2023 The Authors (see AUTHORS file)

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#      http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'aod-validate'

# Support pull request triggering event.
on:
  pull_request:
    branches:
      - 'main'

jobs:
  do_not_merge:
    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Checkout Triggering Branch'
        uses: 'actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab' # ratchet:actions/checkout@v3
        with:
          ref: '${{ github.event.pull_request.head.ref }}'
      # - id: 'fail'
      #   if: '${{ hashFiles(''iam.yaml'') != '''' }}'
      #   run: 'exit 1'
      - id: 'fail'
        run: |
          if [ -f "iam.yaml" ]; then
            exit 1
          fi
  check_files:
    runs-on: 'ubuntu-latest'
    name: 'Check file existence'
    outputs:
      has_files: '${{ steps.result.HAS_FILES }}'
    steps:
      - name: 'Checkout Triggering Branch'
        uses: 'actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab' # ratchet:actions/checkout@v3
        with:
          ref: '${{ github.event.pull_request.head.ref }}'
      - id: 'result'
        if: '${{ hashFiles(''iam.yaml'') != '''' }}'
        run: |
          echo "HAS_FILES=true" >> "$GITHUB_OUTPUT"

  validate:
    needs: 'check_files'
    if: '${{ needs.check_files.outputs.has_files == ''true''}}'
    uses: 'abcxyz/access-on-demand/.github/workflows/validate.yml@main' # Currently using main, change here to ping the tag.
    # To specify inputs, change the repository variables.
    # Details: https://docs.github.com/en/actions/learn-github-actions/variables#creating-configuration-variables-for-a-repository
    with:
      aod_cli_version: '${{ vars.aod_cli_version || ''latest'' }}'
      go_version: '${{ vars.go_version || ''1.20'' }}'
